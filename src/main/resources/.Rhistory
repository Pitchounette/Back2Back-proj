fichier = read.csv("iris.csv", header=TRUE)
fichier
fichier[,1]
fichier = read.csv("iris.csv", header=TRUE)
fichier
fichier = read.csv("iris.csv", header=TRUE)
repertoire = "iris.csv"
y = "Species"
fichier = read.csv(repertoire, header=TRUE)
long = nrow(fichier)
longTrain = round(long*splitRatio)
indTrain = sample(1:long, longTrain)
train.fichier = fichier[indTrain,]
repertoire = "iris.csv"
y = "Species"
splitRatio=0.7
minbucket=25
fichier = read.csv(repertoire, header=TRUE)
long = nrow(fichier)
longTrain = round(long*splitRatio)
indTrain = sample(1:long, longTrain)
train.fichier = fichier[indTrain,]
test.fichier = fichier[-indTrain,]
set.seed(runif(1,0,1000))
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
library(rpart)
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
plot(fichier.rpart)
fichier = fichier[,-1]
long = nrow(fichier)
longTrain = round(long*splitRatio)
indTrain = sample(1:long, longTrain)
train.fichier = fichier[indTrain,]
test.fichier = fichier[-indTrain,]
set.seed(runif(1,0,1000))
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
plot(fichier.rpart)
fichier
csv
str(fichier)
?csv
?read.csv
fichier = read.csv(repertoire, header=TRUE, row.names = F)
fichier = read.csv(repertoire, header=TRUE, row.names = T)
fichier = read.csv(repertoire, header=TRUE)
long = nrow(fichier)
longTrain = round(long*splitRatio)
indTrain = sample(1:long, longTrain)
train.fichier = fichier[indTrain,]
test.fichier = fichier[-indTrain,]
set.seed(runif(1,0,1000))
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
predict.fichier = predict(fichier.rpart, newdata = test.fichier, type="class")
cmat_Cart = table(eval(parse(text=(paste0("test.fichier$",y)))), predict.fichier)
success=0
for (i in 1:nrow(cmat_Cart)){
success = success +  cmat_Cart[i,i]
}
accuracy = success/sum(cmat_Cart)
accuracy
train.fichier
fichier = read.csv(repertoire, header=TRUE)
long = nrow(fichier)
longTrain = round(long*splitRatio)
indTrain = sample(1:long, longTrain)
train.fichier = fichier[indTrain,]
test.fichier = fichier[-indTrain,]
set.seed(runif(1,0,1000))
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
plot(fichier.rpart)
text(fichier.rpart)
test.fichier
train.fichier
?sort()
sort(train.fichier, partial = "Species")
sort(train.fichier, partial = 5)
train.fichier = train.fichier[order(train.fichier$Species),]
train.fichier
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = minbucket)
plot(fichier.rpart)
str(train.fichier)
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = 50)
plot(fichier.rpart)
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = 40)
plot(fichier.rpart)
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = 10)
plot(fichier.rpart)
print(plot(fichier.rpart))
predict.fichier = predict(fichier.rpart, newdata = test.fichier, type="class")
cmat_Cart = table(eval(parse(text=(paste0("test.fichier$",y)))), predict.fichier)
success=0
for (i in 1:nrow(cmat_Cart)){
success = success +  cmat_Cart[i,i]
}
accuracy = success/sum(cmat_Cart)
accuracy
cmat_Cart
fichier.rpart = rpart(eval(parse(text=(y)))~.,data=train.fichier, method="class", minbucket  = 20)
plot(fichier.rpart)
fichier = read.csv("iris.csv", header=TRUE)
?rpart
